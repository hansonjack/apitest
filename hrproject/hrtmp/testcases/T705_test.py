# NOTE: Generated By HttpRunner v3.1.6
# FROM: testcases\705.yml


from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase


class TestCaseT705(HttpRunner):

    config = (
        Config("测试环境")
        .variables(
            **{
                "clientType": "mch",
                "gztest_url": "http://192.168.50.34:18081",
                "phone": "098630001",
                "url": "https://postman-echo.com",
            }
        )
        .base_url("http://192.168.50.34:18081")
        .verify(False)
        .export(*["fticket", "fmchOid", "foid", "token"])
    )

    teststeps = [
        Step(
            RunRequest("获取下单ticket")
            .with_variables(
                **{
                    "faccType": "1",
                    "fmchid": "10131",
                    "fmchoId": "${get_order_num()}",
                    "forderType": "4",
                    "fpayAmount": "1",
                    "fuid": "200000433",
                    "rechargeAmount": "1",
                    "toFuid": "10131",
                }
            )
            .setup_hook("${pre_request($request)}")
            .post("/api/trade/ticketAction/createTicket")
            .with_headers(**{"content_type": "application/x-www-form-urlencoded"})
            .with_json(
                {
                    "clientType": "$clientType",
                    "encryption_params": {
                        "faccType": "$faccType",
                        "fmchid": "$fmchid",
                        "fmchoId": "$fmchoId",
                        "forderType": "$forderType",
                        "fpayAmount": "$fpayAmount",
                        "fuid": "$fuid",
                        "rechargeAmount": "$rechargeAmount",
                        "toFuid": "$toFuid",
                    },
                    "phone": "$phone",
                    "timeStamp": "${get_timestamp()}",
                    "token": "$token",
                }
            )
            .extract()
            .with_jmespath("body.datas.ticket.fmchOid", "fmchOid")
            .with_jmespath("body.datas.ticket.foid", "foid")
            .with_jmespath("body.datas.ticket.fticket", "fticket")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 200)
        ),
        Step(
            RunRequest("获取公共token")
            .with_variables(**{})
            .post("/api/public/token/getSignToken")
            .with_params(
                **{
                    "clientType": "$clientType",
                    "phone": "$phone",
                    "timeStamp": "${get_timestamp()}",
                }
            )
            .with_headers(**{"content_type": "application/x-www-form-urlencoded"})
            .extract()
            .with_jmespath("body.datas.token", "token")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 200)
        ),
    ]


if __name__ == "__main__":
    TestCaseT705().test_start()
